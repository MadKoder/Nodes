class Klass (
    var varAttr : int
) {
    def defAttr = self.varAttr + 10
    slot inc x:int do
        self.varAttr = self.varAttr + x
}

# instance.varAttr = 1, instance.defAttr = 11
# after setVarAttr : instance.varAttr = 2, instance.defAttr = 12
# after instance.inc(10) : instance.varAttr = 12, instance.defAttr = 22
# after setInstance : instance.varAttr = 3, instance.defAttr = 13
var instance = new Klass(1)

# 1, after setVarAttr : 1, after instance.inc(10) : 1, after setInstance : 1
var varFromInstanceVar = instance.varAttr

# 1, after setVarAttr : 2, after setInstance : 3
def defFromInstanceVar = instance.varAttr

# 11, after setVarAttr : 12, after setInstance : 13
def defFromInstanceDef = instance.defAttr

slot setVarAttr do
    instance.varAttr = 2

slot setInstance do
    instance = new Klass(3)

class Nested (
    var varAttr : int
) {
    def defAttr = self.varAttr + 10
}

class Compound (
    var nested : Nested
) {
    # def defFromNestedVar = self.nested.varAttr + 10 # TODO enable ?
    slot inc x:int do
        self.nested.varAttr = self.nested.varAttr + x
}

# nestedInstance.varAttr = 1, nestedInstance.defAttr = 11
# after compoundInstance.inc(10) : nestedInstance.varAttr = 11, nestedInstance.defAttr = 21
var nestedInstance = new Nested(1)

# compoundInstance.nested.varAttr = 1, compoundInstance.nested.defAttr = 11
# after compoundInstance.inc(10) : compoundInstance.nested.varAttr = 11, compoundInstance.nested.defAttr = 21
var compoundInstance = new Compound(nestedInstance)

