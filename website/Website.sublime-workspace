{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"mar",
				"margin-left"
			],
			[
				"tex",
				"text-align"
			],
			[
				"marg",
				"margin-left"
			],
			[
				"ma",
				"margin-right"
			],
			[
				"pa",
				"padding-left"
			],
			[
				"bor",
				"border"
			],
			[
				"borde",
				"border-style"
			],
			[
				"firs",
				"firstType"
			],
			[
				"most",
				"mostGenericType"
			],
			[
				"typ",
				"typeToString"
			],
			[
				"isS",
				"isSameOrSubType"
			],
			[
				"check",
				"checkedTypeParams"
			],
			[
				"ref",
				"refTypeParams"
			],
			[
				"ch",
				"checkedTypeParams"
			],
			[
				"getT",
				"getType"
			],
			[
				"inOu",
				"inOut1"
			],
			[
				"second",
				"secondType"
			],
			[
				"chec",
				"checkedBaseType"
			],
			[
				"type",
				"typeParams"
			],
			[
				"paramSpe",
				"paramSpec"
			],
			[
				"id",
				"newId"
			],
			[
				"cons",
				"console"
			],
			[
				"fields",
				"fieldsOp"
			],
			[
				"fie",
				"fieldsOperators"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/E/WebSite/nodes.html",
			"settings":
			{
				"buffer_size": 13347,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/E/WebSite/nodes.css",
			"settings":
			{
				"buffer_size": 1133,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/E/GitHub/Nodes/examples/02-ArcaNodes/arcaNodes.nodes",
			"settings":
			{
				"buffer_size": 7698,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/E/GitHub/Nodes/examples/03-Tree/treeEdit.nodes",
			"settings":
			{
				"buffer_size": 3817,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/E/GitHub/Nodes/src/jsEngine/Engine.js",
		"/E/GitHub/Nodes/examples/02-ArcaNodes/arcaNodes.js",
		"/E/tmp/nodes.css",
		"/E/WebSite/index.html",
		"/C/Documents and Settings/Vinz/Application Data/Sublime Text 3/Packages/User/bh_core.sublime-settings",
		"/E/WebSite/style.css",
		"/E/GitHub/Nodes/examples/02-ArcaNodes/arcaNodes.html",
		"/C/Documents and Settings/Vinz/Application Data/Sublime Text 3/Packages/User/nodedesc.sublime-snippet",
		"/C/Documents and Settings/Vinz/Application Data/Sublime Text 3/Packages/User/imgcont.sublime-snippet",
		"/E/WebSite/nodes/examples/03-Tree/tree.html",
		"/E/WebSite/nodes/examples/03-Tree/treeEdit.html",
		"/E/WebSite/libs/Parser.js",
		"/E/WebSite/nodes/examples/03-Tree/langs.model.xml",
		"/E/GitHub/libs/Parser.js",
		"/E/GitHub/Nodes/examples/03-Tree/treeEdit.js",
		"/E/GitHub/Nodes/examples/03-Tree/tree.css",
		"/E/GitHub/Nodes/examples/02-ArcaNodes/arcaNodes.nodes",
		"/E/GitHub/Nodes/src/jsEngine/Parser.txt",
		"/E/GitHub/Nodes/examples/01-Snake/snake.txt",
		"/C/Documents and Settings/Vinz/Application Data/Sublime Text 3/Packages/User/JavaScript.sublime-settings",
		"/C/Documents and Settings/Vinz/Application Data/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/E/GitHub/Nodes/examples/03-Tree/testSyntax.nodes",
		"/E/GitHub/Nodes/examples/03-Tree/tree.nodes",
		"/E/GitHub/Nodes/examples/03-Tree/tree.html",
		"/E/GitHub/Nodes/examples/03-Tree/tree.js",
		"/E/GitHub/Nodes/examples/03-Tree/treeEdit.html",
		"/E/GitHub/Nodes/examples/03-Tree/Chrome.bat",
		"/E/GitHub/Nodes/examples/03-Tree/ChromeTreeEdit.bat",
		"/E/Python/Nodes/HtmlNodes/06-Inheritance/test.js",
		"/C/Documents and Settings/Vinz/Application Data/Sublime Text 3/Packages/Default/Preferences.sublime-settings"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"event stream",
			"events stream",
			"Events stream",
			"findCommonSuperClass",
			"MatchType",
			"eventsDependencies",
			"getNodeName",
			"__events",
			"makeEvent",
			"Sink",
			"makeAddDependencies",
			"circleModel",
			"=",
			"Function",
			"=",
			"Node",
			"IfAction",
			"Nodes",
			"matchType",
			"MatchTypeAction",
			"Function",
			"\":\"",
			"MatchTypeAction",
			"ForAction",
			"mf1",
			"funcToNodeSpec",
			"getMostGenericType",
			"subClasses",
			"mff2",
			"\"+\" : mtf2\n	(\n		function(x, y) // The function\n		{	\n			return x + y;\n		},\n		function(template) // Input and output types\n		{\n			return inOut2(template, template, template);\n		},\n		function(x, y)	// Template guess from input types\n		{\n			return(getMostGenericType(x, y));\n		}\n	),",
			"mod",
			"getMostGenericType",
			"isSameOrSubType",
			"mt",
			"makeFunction1",
			"makeFunction2",
			"makeFunction3",
			"List",
			"[]",
			"getTemplates",
			"cellAsciiToInt",
			"strToList",
			"cellAsciiToInt",
			"mod",
			"at",
			"mff1",
			"rror(\"Parameter \" + val.get() + \" of index \" + paramIndex + \" in ca",
			"currentAction",
			"==",
			"Add",
			"getType",
			"Match",
			"child",
			"MatchType",
			"Match",
			"editedFigureInitialPos",
			"matches",
			"\"matchType\"",
			"with",
			"matches",
			"MatchType",
			"\"match\"",
			"makeAction",
			"Vals",
			"ElseCase",
			"Cases",
			"MatchTypeAction",
			"Action",
			"previousIndent",
			"openBraces",
			">",
			"Signal",
			"=>",
			"buttonId",
			"FieldDef ",
			"float",
			"Struct",
			"SubStore",
			"selfStore",
			"__signals",
			"fields:FieldsDef? _ subs:(\",\" _ \"subs\" _ \":\" _ \"(\" _ structs:Structs _ \")\" {return structs;})?\n	{\n		return {\n			fields : fields != null ? fields : [],\n			subs : subs != null ? subs : []};\n	}\n",
			"subs",
			"Click",
			"click",
			"Click",
			"click",
			"		merge(accum, state)\n",
			"Button",
			"button",
			"Button"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": true,
		"regex": false,
		"replace_history":
		[
			"message",
			"messages",
			"Messages",
			"Message",
			"tree",
			"getCommonSuperClass"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/E/WebSite/nodes.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13347,
						"regions":
						{
						},
						"selection":
						[
							[
								894,
								894
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 990.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/E/WebSite/nodes.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1133,
						"regions":
						{
						},
						"selection":
						[
							[
								378,
								378
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/CSS/CSS.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/E/GitHub/Nodes/examples/02-ArcaNodes/arcaNodes.nodes",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7698,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 495.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/E/GitHub/Nodes/examples/03-Tree/treeEdit.nodes",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3817,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 540.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "Website.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"E:\\GitHub\\Nodes\\Nodes.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
