functions:
	# add : int -> int -> int
	inc x =
		x + 1
	add x y =
		(inc x) + y
	typedAdd (x : int) (y : int) : int =
		x + y
	# add (x : int) (y : int) : int =
	# 	x + y
	# add<T> (x : T) (y : T) : T =
	# 	x + y
	# add<T>(T x, T y) =
	# 	x + y
nodes:
	var y = typedAdd 5 6
	var x = add 0 1
