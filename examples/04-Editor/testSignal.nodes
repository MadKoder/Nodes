structs:
	Ui : 
		subs :
			Group:
				list<Ui> children
				subs :
					HGroup
					VGroup
			Button :
				string desc
				signal click(string what)
				slot onClick(string what):
					self.click(what)
			TextInput :
				string desc
				signal set(string text)
				slot onChange(string text):
					self.set(text)
	ParamDecl :
		string	name
		string	type
	Function :
		string	id
		list<ParamDecl>	paramsDecl
	Indir :
		ParamDecl	p
	Program :
		list<Function>	functions
functions:
	ref TextInput	test(ParamDecl paramDecl)
		TextInput(paramDecl.name, set => paramDecl.name = text)
	ref TextInput	test2(ParamDecl paramDecl)
		test(paramDecl)
	# ref TextInput	test3(ParamDecl paramDecl)
	# 	HGroup
	# 	(
	# 		[
	# 			TextInput(paramDecl.name, set => paramDecl.name = text)
	# 		]
	# 	)
	ref Ui funcToUi(Function func)
		VGroup
		(
			[
				HGroup
				(
					[
						TextInput(paramDecl.type, set => paramDecl.type = text)
						,TextInput(paramDecl.name, set => paramDecl.name = text)
					]
				)
				for paramDecl in func.paramsDecl
			]
		)
	# ref Ui funcToUi(Function func)
	# 	VGroup
	# 	(
	# 		[
	# 			TextInput(paramDecl.type, set => paramDecl.type = text)
	# 			for paramDecl in func.paramsDecl
	# 		]
	# 	)
	ref Ui programToUi(Program prog)
		VGroup
		(
			[funcToUi(func) for func in prog.functions]
		)
nodes:
	var p = ParamDecl("name", "type")
	# var p2 = ParamDecl("name2", "type2")
	# var indir = Indir(ParamDecl("name3", "type3"))
	var func = Function("func", 
		[
			ParamDecl("name4", "type4")
			,ParamDecl("name5", "type5")
		])
	# def ui = TextInput(p.name, set => p.name = text)
	def ui = test(p)
	def ui2 = test2(p)
	def ui3 = VGroup
		(
			[test(paramDecl) for paramDecl in func.paramsDecl]
			# [TextInput(paramDecl.name, set => paramDecl.name = text) for paramDecl in func.paramsDecl]
		)
	def ui4 = VGroup
		(
			[test(paramDecl) for paramDecl in func.paramsDecl]
			# [TextInput(paramDecl.name, set => paramDecl.name = text) for paramDecl in func.paramsDecl]
		)
	# def ui3 = funcToUi(func)
	# def uiView = UiView(ui)
	# def uiView2 = UiView(ui2)
	def uiView3 = UiView(ui3)
	def uiView4 = UiView(ui4)
	# def uiView5 = UiView(ui3)
	var prog = Program
		(
			[
				Function
				(
					"add",
					[
						ParamDecl("x", "float"),
						ParamDecl("y", "float")
					]
				)
			]
		)
	# def progView = UiView(programToUi(prog))
	# def progView2 = UiView(programToUi(prog))
actions :
	# tick :
	# 	program = program \ functions = pushFront(program.functions, Function("fun2"))
