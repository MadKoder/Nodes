structs:
	Obj :
		subs :
			Group :
				list<Obj>		children
				signal onAdd(Obj obj)
				slot add(Obj obj):
					self.children.pushBack(obj)
					self.onAdd(obj)
			Leaf :
				int x
	Ui : 		
		subs :
			UiGroup:
				list<Ui> children
			UiLeaf :
				int x
functions:
	ref Ui objToUi(Obj obj)
	ref UiGroup groupToUi(Group g):
		UiGroup
			(
				[objToUi(child) for child in g.children]
			)
		g.children.pushBack => self.children.pushBack(objToUi(e))
	ref Ui objToUi(Obj obj)
		type obj:
			Group : groupToUi
				(
					obj					
				)
			Leaf : UiLeaf(obj.x * 2)
nodes:
	var graph = Group([Group([])])
	var ui = objToUi(graph)
actions:
	tickGraph(Obj obj):
		type obj do :
			Group => 
				obj.add(Leaf(100))
				for child in obj.children do
					tickGraph(child)
	tick:
		tickGraph(graph)